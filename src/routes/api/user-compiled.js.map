{"version":3,"sources":["user.js"],"names":[],"mappings":"AAAA,MAAM,OAAO,QAAQ,mBAAR,CAAb;;AAEA,OAAO,OAAP,GAAkB,OAAD,IAAa;AAC1B,UAAM,SAAS,QAAQ,MAAR,EAAf;;;AAGA,WAAO,GAAP,CAAW,QAAX,EAAqB,CAAC,GAAD,EAAM,GAAN,KAAc;AAC/B,aAAK,OAAL,CAAc,GAAD,IAAS;AAClB,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACH,SAFD,EAEI,IAAD,IAAU;AACT,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACH,SAJD;;;;AAQH,KATD;;;AAYA,WAAO,GAAP,CAAW,YAAX,EAAyB,CAAC,GAAD,EAAM,GAAN,KAAc;AACnC,YAAI,IAAJ,CAAS,EAAT,GAAc,IAAI,MAAJ,CAAW,EAAzB;AACA,aAAK,IAAL,CAAU,IAAI,IAAd,EAAqB,GAAD,IAAS;AACzB,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACH,SAFD,EAEI,IAAD,IAAU;AACT,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACH,SAJD;AAKH,KAPD;;;AAUA,WAAO,MAAP,CAAc,YAAd,EAA4B,CAAC,GAAD,EAAM,GAAN,KAAc;AACtC,YAAI,IAAJ,CAAS,EAAT,GAAc,IAAI,MAAJ,CAAW,EAAzB;AACA,aAAK,OAAL,CAAa,IAAI,IAAjB,EAAwB,GAAD,IAAS;AAC5B,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACH,SAFD,EAEI,IAAD,IAAU;AACT,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACH,SAJD;AAKH,KAPD;;;AAUA,WAAO,IAAP,CAAY,YAAZ,EAA0B,CAAC,GAAD,EAAM,GAAN,KAAc;AACpC,YAAI,IAAJ,CAAS,EAAT,GAAc,IAAI,MAAJ,CAAW,EAAzB;AACA,aAAK,MAAL,CAAY,IAAI,IAAhB,EAAuB,GAAD,IAAS;AAC3B,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACH,SAFD,EAEI,IAAD,IAAU;AACT,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACH,SAJD;AAKH,KAPD;;;AAUA,WAAO,IAAP,CAAY,QAAZ,EAAsB,CAAC,GAAD,EAAM,GAAN,KAAc;AAChC,aAAK,MAAL,CAAY,IAAI,IAAhB,EAAuB,GAAD,IAAS;AAC3B,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,GAArB;AACH,SAFD,EAEI,IAAD,IAAU;AACT,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACC,SAJL;AAKH,KAND;;AAQA,WAAO,MAAP;AACH,CAvDD","file":"user-compiled.js","sourcesContent":["const user = require('../../models/user');\n\nmodule.exports = (express) => {\n    const router = express.Router();\n\n    // Read All\n    router.get('/users', (req, res) => {\n        user.findAll((err) => {\n            res.status(500).json(err);\n        }, (data) => {\n            res.status(200).json(data);\n        });\n        // res.json({\n        //     healthy: true\n        // })\n    });\n\n    // Read One\n    router.get('/users/:id', (req, res) => {\n        req.body.id = req.params.id;\n        user.find(req.body, (err) => {\n            res.status(500).json(err);\n        }, (data) => {\n            res.status(200).json(data);\n        });\n    });\n\n    // Destroy\n    router.delete('/users/:id', (req, res) => {\n        req.body.id = req.params.id;\n        user.destroy(req.body, (err) => {\n            res.status(500).json(err);\n        }, (data) => {\n            res.status(200).json(data);\n        });\n    });\n\n    // Update\n    router.post('/users/:id', (req, res) => {\n        req.body.id = req.params.id;\n        user.update(req.body, (err) => {\n            res.status(500).json(err);\n        }, (data) => {\n            res.status(200).json(data);\n        });\n    });\n\n    // Create\n    router.post('/users', (req, res) => {\n        user.create(req.body, (err) => {\n            res.status(500).json(err);\n        }, (data) => {\n            res.status(200).json(data);\n            })\n    });\n\n    return router;\n};"]}